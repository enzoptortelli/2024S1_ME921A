library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
?fviz_nbclust
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(tidyverse)
library(cluster)
library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
rm(list = ls(all.names = TRUE))
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex)
# rename('Comprimento do cúlmen' = culmen_length_mm,
#                                'Profundidade do cúlmen' = culmen_depth_mm,
#                                'Comprimento da nadadeira' = flipper_length_mm,
#                                'Massa corporal' = body_mass_g
#                               )
col_names <- c('Compri. do cúlmen (mm)',
'Prof. do cúlmen (mm)',
'Compri. da nadadeira',
'Massa corporal (g)'
)
kable(db_pre_processado %>%
summary(),
col.names = col_names,
format = 'latex'
)
summary(db_pre_processado)
db <- db_pre_processado %>%
mutate(flipper_length_mm = flipper_length_mm / 10, body_mass_g = body_mass_g / 100) %>%
scale(., scale = FALSE)
summary(db)
modelPCA <- princomp(db)
summary(modelPCA)
ggbiplot(modelPCA, scale = 0) + theme_bw()
plot(modelPCA, main = "Screenplot")
db_ppca <- modelPCA$scores[, 1:2]
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
pmodel_pam <- pam(db_ppca, 3)
plot(pmodel_pam)
fviz_nbclust(db_ppca, cluster::pam, method = "silhouette")
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
install.packages('vtable')
kable(db_pre_processado %>%
summary(),
col.names = col_names,
format = 'html'
)
?summary
library(vtable)
sumtable(db_pre_processado)
?sumtable
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
)
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
labels = col_names
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
labels = col_names
)
col_names <- c('Compri. do culmen (mm)',
'Prof. do culmen (mm)',
'Compri. da nadadeira',
'Massa corporal (g)'
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
labels = col_names
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
labels = col_names,
out = 'latex'
)
db_ppca <- modelPCA$scores[, 1:2]
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
pmodel_pam <- pam(db_ppca, 3)
plot(pmodel_pam)
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA',
caption = 'Figura X: ksdjfhksdf') +
theme_bw()
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA',
subtitle =  = 'Figura X: ksdjfhksdf') +
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA',
subtitle ='Figura X: ksdjfhksdf') +
theme_bw()
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA',
caption ='Figura X: ksdjfhksdf') +
theme_bw()
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA',
caption ='Figura X: biplot indicando a relação entre as variáveis e as PC') +
theme_bw()
modelPCA <- princomp(db)
summary(modelPCA)
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA') +
theme_bw()
plot(modelPCA, main = "Screenplot")
plot(modelPCA, main = "Screenplot", ylab = 'test')
plot(modelPCA, main = "Screenplot", ylabs = 'test')
?plot
plot(modelPCA, main = "Screenplot", ylab = 'test')
plot(modelPCA, main = "Screenplot", col = 'yellow')
fviz_cluster(pmodel_pam)
fviz_silhouette(pmodel_pam)
fviz_pca_biplot(modelPCA)
fviz_screeplot(modelPCA)
fviz_pca_biplot(modelPCA) +
labs(title = 'Biplot - PCA') +
theme_bw()
fviz_pca_biplot(modelPCA) +
labs(title = 'Biplot - PCA')
?fviz_pca_biplot
fviz_pca_biplot(modelPCA, label = 'none') +
labs(title = 'Biplot - PCA')
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA')
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename('Comprimento do cúlmen' = culmen_length_mm,
'Profundidade do cúlmen' = culmen_depth_mm,
'Comprimento da nadadeira' = flipper_length_mm,
'Massa corporal' = body_mass_g
)
rm(list = ls(all.names = TRUE))
render(enconding = 'UTF-8')
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename('Comprimento do cúlmen' = culmen_length_mm,
'Profundidade do cúlmen' = culmen_depth_mm,
'Comprimento da nadadeira' = flipper_length_mm,
'Massa corporal' = body_mass_g
)
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename('Comprimento do cúlmen' = culmen_length_mm,
'Profundidade do cúlmen' = culmen_depth_mm,
'Comprimento da nadadeira' = flipper_length_mm,
'Massa corporal' = body_mass_g
)
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(`Comprimento do cúlmen` = culmen_length_mm,
`Profundidade do cúlmen` = culmen_depth_mm,
`Comprimento da nadadeira` = flipper_length_mm,
`Massa corporal` = body_mass_g
)
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm)
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm,
prof_culmen = culmen_depth_mm,
compri_nadadeira = flipper_length_mm,
massa_corporal = body_mass_g)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(tidyverse)
library(cluster)
library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
library(vtable)
rm(list = ls(all.names = TRUE))
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm,
prof_culmen = culmen_depth_mm,
compri_nadadeira = flipper_length_mm,
massa_corporal = body_mass_g)
kable(db_pre_processado %>%
summary(),
col.names = col_names,
format = 'latex'
)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(tidyverse)
library(cluster)
library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
library(vtable)
rm(list = ls(all.names = TRUE))
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm,
prof_culmen = culmen_depth_mm,
compri_nadadeira = flipper_length_mm,
massa_corporal = body_mass_g)
kable(db_pre_processado %>%
summary(),
format = 'latex'
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
labels = col_names,
out = 'latex'
)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(tidyverse)
library(cluster)
library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
library(vtable)
rm(list = ls(all.names = TRUE))
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm,
prof_culmen = culmen_depth_mm,
compri_nadadeira = flipper_length_mm,
massa_corporal = body_mass_g)
kable(db_pre_processado %>%
summary(),
format = 'latex'
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
out = 'latex'
)
db <- db_pre_processado %>%
mutate(compri_nadadeira = compri_nadadeira / 10, massa_corporal = massa_corporal / 100) %>%
scale(., scale = FALSE)
summary(db)
modelPCA <- princomp(db)
summary(modelPCA)
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA') +
theme_bw()
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA')
plot(modelPCA, main = "Screenplot", col = '')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(tidyverse)
library(cluster)
library(factoextra)
library(knitr)
library(kableExtra)
library(ggbiplot)
library(vtable)
rm(list = ls(all.names = TRUE))
dados_originais <- read_csv("data/penguin.zip")
db_pre_processado <- dados_originais %>%
drop_na %>%
filter(flipper_length_mm > 0 & flipper_length_mm < 5000 & sex == 'MALE') %>%
select(!sex) %>%
rename(compri_culmen = culmen_length_mm,
prof_culmen = culmen_depth_mm,
compri_nadadeira = flipper_length_mm,
massa_corporal = body_mass_g)
kable(db_pre_processado %>%
summary(),
format = 'latex'
)
sumtable(db_pre_processado,
summ = c('min(x)',
'mean(x)',
'max(x)'
),
out = 'latex'
)
db <- db_pre_processado %>%
mutate(compri_nadadeira = compri_nadadeira / 10, massa_corporal = massa_corporal / 100) %>%
scale(., scale = FALSE)
summary(db)
modelPCA <- princomp(db)
summary(modelPCA)
ggbiplot(modelPCA, scale = 0) +
labs(title = 'Biplot - PCA') +
theme_bw()
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA')
plot(modelPCA, main = "Screenplot")
db_ppca <- modelPCA$scores[, 1:2]
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
pmodel_pam <- pam(db_ppca, 3)
plot(pmodel_pam)
fviz_screeplot(modelPCA)
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA')
fviz_pca_biplot(modelPCA) +
labs(title = 'Biplot - PCA', x = 'abc')
fviz_pca_biplot(modelPCA) +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
fviz_pca_biplot(modelPCA, lable = 'var') +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
fviz_screeplot(modelPCA)
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variância explicada')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da varincia explicada')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variãncia explicada')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variancia explicada')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variancia explicada')
db_ppca <- modelPCA$scores[, 1:2]
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
pmodel_pam <- pam(db_ppca, 3)
plot(pmodel_pam)
fviz_pca(modelPCA)
fviz_pca(modelPCA)
fviz_cluster(pmodel_pam)
fviz_cluster(pmodel_pam) +
theme_bw()
fviz_cluster(pmodel_pam)
?fviz_cluster
fviz_cluster(pmodel_pam, ggtheme = theme_bw())
fviz_nbclust(db_ppca, cluster::pam, method = "wss")
?fviz_nbclust
fviz_nbclust(db_ppca, cluster::pam, method = "wss", linecolor = 'yellow')
fviz_nbclust(db_ppca, cluster::pam, method = "wss", linecolor = 'black')
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimização do número de clusters')
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimizacao do numero de clusters')
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimizacao do numero de clusters',
x = 'Numero de clusters',
y = 'Soma de quadrados interno total')
source("~/.active-rstudio-document")
kable(db_pre_processado %>%
summary(.),
format = 'latex'
)
summary(db)
db <- db_pre_processado %>%
mutate(compri_nadadeira = compri_nadadeira / 10, massa_corporal = massa_corporal / 100) %>%
scale(., scale = FALSE)
summary(db)
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
modelPCA <- princomp(db)
summary(modelPCA)
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variancia explicada')
summary(modelPCA)
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variancia explicada')
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA', x = 'PC1', y = 'PC2')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes principais', y = 'Porcentagem da variancia explicada')
summary(modelPCA)
fviz_screeplot(modelPCA) +
labs( y = 'Porcentagem da variancia explicada')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes', y = 'Porcentagem da variancia explicada')
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimizacao do numero de clusters',
x = 'Numero de clusters',
y = 'Soma de quadrados interno total')
db_ppca <- modelPCA$scores[, 1:2]
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimizacao do numero de clusters',
x = 'Numero de clusters',
y = 'Soma de quadrados interno total')
pmodel_pam <- pam(db_ppca, 3)
fviz_cluster(pmodel_pam, ggtheme = theme_bw())
plot(pmodel_pam)
fviz_silhouette(pmodel_pam)
fviz_silhouette(pmodel_pam, title = 'abc')
fviz_silhouette(pmodel_pam)
fviz_cluster(pmodel_pam, ggtheme = theme_bw())
fviz_silhouette(pmodel_pam)
fviz_silhouette(pmodel_pam, title = 'abc', subtitle = 'cbd')
fviz_silhouette(pmodel_pam)
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura média das silhuetas: 0.61',
y = 'Largura da silhueta')
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura média das silhuetas: 0.61',
ylab = 'Largura da silhueta')
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura média das silhuetas: 0.61')
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura média das silhuetas: 0.61')
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura media das silhuetas: 0.61')
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura media das silhuetas: 0.61',
ylab = 'Largura da silhueta')
fviz_cluster(pmodel_pam, ggtheme = theme_bw())
fviz_silhouette(pmodel_pam,
title = 'Grafico de silhueta dos clusters',
subtitle = 'Largura media das silhuetas: 0.61',
ylab = 'Largura da silhueta')
fviz_nbclust(db_ppca, cluster::pam, method = "wss") +
labs(title = 'Otimizacao do numero de clusters',
x = 'Numero de clusters',
y = 'Soma de quadrados interno total')
fviz_pca_biplot(modelPCA, label = 'var') +
labs(title = 'Biplot - PCA', x = 'Comp.1', y = 'Comp.2')
fviz_screeplot(modelPCA) +
labs(x = 'Componentes', y = 'Porcentagem da variancia explicada')
pmodel_pam$clusinfo
pmodel_pam$clustering
pmodel_pam$silinfo
pmodel_pam$id.med
db_pre_processado[pmodel_pam$id.med,]
source("~/Faculdade/nao-supervisionado/Trabalho 1/main_2.R")
kable(db_pre_processado %>%
summary(.),
format = 'latex'
)
summary(db)
install.packages('stringdist')
library(stringdist)
?damerau_
??damerau_
?stringdist
stringdist('Araraquara', 'Itapira')
stringdist('Araraquara', 'São Paulo')
stringdist('São Paulo', 'Itapira')
stringdist('São Paulo', 'Mogi Mirim')
stringdist('Araraquara', 'Mogi Mirim')
stringdist('Araraquara', 'Mogi Mirim', method = 'dl')
stringdist('Araraquara', 'Mogi Mirim', method = 'soundex')
stringdist('São Paulo', 'Mogi Mirim', method = 'soundex')
stringdist('Sao Paulo', 'Mogi Mirim', method = 'soundex')
stringdist('Sao Paulo', 'Sao Caetano', method = 'soundex')
municipios <- read.table("C:/Users/enzop/Downloads/municipios.csv", encoding="UTF-8", sep=";", quote="\"")
View(municipios)
warninigs()
warning()
warnings()
a <- 'São'
a
a
a
a
a
a
a
a
