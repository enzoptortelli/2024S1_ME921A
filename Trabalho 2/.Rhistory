ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências da Natureza por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_ch <- ggplot(db_mclust %>% select(CH, Cluster), aes(x = Cluster, y = CH, group = Cluster, fill = Cluster)) +
geom_violin() +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências Humanas por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_mt <- ggplot(db_mclust %>% select(MT, Cluster), aes(x = Cluster, y = MT, group = Cluster, fill = Cluster)) +
geom_violin() +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Matemática por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_redacao <- ggplot(db_mclust %>% select(REDAÇÃO, Cluster), aes(x = Cluster, y = REDAÇÃO, group = Cluster, fill = Cluster)) +
geom_violin() +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Redação por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_ch
gauss_violin_cn
gauss_violin_lc
gauss_violin_mt
gauss_violin_redacao
ggsave('plots/gauss_violin_mt.png', plot = gauss_violin_mt, width = 2000, height = 1428, units = 'px')
ggsave('plots/gauss_violin_ch.png', plot = gauss_violin_ch, width = 2000, height = 1428, units = 'px')
ggsave('plots/gauss_violin_cn.png', plot = gauss_violin_cn, width = 2000, height = 1428, units = 'px')
ggsave('plots/gauss_violin_lc.png', plot = gauss_violin_lc, width = 2000, height = 1428, units = 'px')
ggsave('plots/gauss_violin_redacao.png', plot = gauss_violin_redacao, width = 2000, height = 1428, units = 'px')
ggsave('plots/bar_num_obs_cluster.png', plot = bar_num_obs_cluster, width = 2000, height = 1429, units = 'px')
ggsave('plots/violin_nota.png', plot = violin_nota, width = 2000, height = 1428, units = 'px')
pam_violin_ch
gauss_violin_ch
source("~/Faculdade/nao-supervisionado/Trabalho 2/INPUT_R_MICRODADOS_ENEM_2023.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/mclust.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/pam.R")
ggsave('plots/pam_violin_mt.png', plot = pam_violin_mt)
ggsave('plots/pam_violin_mt.png', plot = pam_violin_mt)
ggsave('plots/pam_violin_ch.png', plot = pam_violin_ch)
ggsave('plots/pam_violin_cn.png', plot = pam_violin_cn)
ggsave('plots/pam_violin_lc.png', plot = pam_violin_lc)
ggsave('plots/pam_violin_redacao.png', plot = pam_violin_redacao)
source("~/Faculdade/nao-supervisionado/Trabalho 2/INPUT_R_MICRODADOS_ENEM_2023.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/pam.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/INPUT_R_MICRODADOS_ENEM_2023.R")
library(mclust)
png('plots\\pairs.png', width = 851, height = 546)
pairs(ENEM_2023)
title(main = 'Gráfico de dispersão das notas dos participantes')
dev.off()
png('plots\\pairs.png')
pairs(ENEM_2023)
dev.off()
source("~/Faculdade/nao-supervisionado/Trabalho 2/INPUT_R_MICRODADOS_ENEM_2023.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/mclust.R")
source("~/Faculdade/nao-supervisionado/Trabalho 2/pam.R")
violin_nota <- ggplot(
ENEM_2023 %>% pivot_longer(cols = everything(), names_to = 'Prova', values_to = 'Nota'),
aes(x = Prova, y = Nota)
) +
geom_violin(draw_quantiles = 0.5, fill = 'grey') +
theme_bw() +
labs(title = 'Gráfico de violino das notas por prova') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
ggsave('plots/violin_nota.png', plot = violin_nota)
source("~/Faculdade/nao-supervisionado/Trabalho 2/INPUT_R_MICRODADOS_ENEM_2023.R")
nb_clust_plot <- fviz_nbclust(ENEM_2023, cluster::pam, method = 'wss')
ggsave('plots/nbclust.png', plot = nb_clust_plot)
png('plots\\pairs.png')
pairs(ENEM_2023)
dev.off()
modelBIC <- mclustBIC(ENEM_2023, 1:15)
png('plots\\bic.png')
plot_bic <- plot(modelBIC, what = 'BIC')
dev.off()
modelICL <- mclustICL(ENEM_2023, 1:15)
png('plots\\icl.png')
plot(modelICL)
dev.off()
model_pam <- pam(ENEM_2023, 7)
silhouette <- fviz_silhouette(model_pam)
ggsave('plots/silhouette.png', plot = silhouette)
db_pam <- ENEM_2023 %>% mutate(Cluster = as.factor(model_pam$clustering))
pam_violin_lc <- kmedoids_violin_LC <- ggplot(db_pam %>% select(LC, Cluster), aes(x = Cluster, y = LC, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_mt <- ggplot(db_pam %>% select(MT, Cluster), aes(x = Cluster, y = MT, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Matemática por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_cn <- ggplot(db_pam %>% select(CN, Cluster), aes(x = Cluster, y = CN, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências da Natureza por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_ch <- ggplot(db_pam %>% select(CH, Cluster), aes(x = Cluster, y = CH, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências Humanas por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_redacao <- ggplot(db_pam %>% select(REDAÇÃO, Cluster), aes(x = Cluster, y = REDAÇÃO, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Redação por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
ggsave('plots/pam_violin_mt.png', plot = pam_violin_mt)
ggsave('plots/pam_violin_ch.png', plot = pam_violin_ch)
ggsave('plots/pam_violin_cn.png', plot = pam_violin_cn)
ggsave('plots/pam_violin_lc.png', plot = pam_violin_lc)
ggsave('plots/pam_violin_redacao.png', plot = pam_violin_redacao)
model_mclust <- Mclust(ENEM_2023, G = 7, modelNames = "EVV")
png('plots\\classification.png')
plot(model_mclust, what = 'classification')
dev.off()
png('plots\\uncertPlot.png')
uncerPlot(model_mclust$z)
dev.off()
db_mclust <- ENEM_2023 %>% mutate(Cluster = as.factor(model_mclust$classification))
violin_nota <- ggplot(
ENEM_2023 %>% pivot_longer(cols = everything(), names_to = 'Prova', values_to = 'Nota'),
aes(x = Prova, y = Nota)
) +
geom_violin(draw_quantiles = 0.5, fill = 'grey') +
theme_bw() +
labs(title = 'Gráfico de violino das notas por prova') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
bar_num_obs_cluster <- ggplot(db_mclust, aes(Cluster, fill = Cluster)) +
geom_bar() +
theme_bw() +
labs(title = 'Número de observações em cada um dos clusters',
y = 'Número de observações') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_lc <- ggplot(db_mclust %>% select(LC, Cluster), aes(x = Cluster, y = LC, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_cn <- ggplot(db_mclust %>% select(CN, Cluster), aes(x = Cluster, y = CN, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências da Natureza por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_ch <- ggplot(db_mclust %>% select(CH, Cluster), aes(x = Cluster, y = CH, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências Humanas por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_mt <- ggplot(db_mclust %>% select(MT, Cluster), aes(x = Cluster, y = MT, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Matemática por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
gauss_violin_redacao <- ggplot(db_mclust %>% select(REDAÇÃO, Cluster), aes(x = Cluster, y = REDAÇÃO, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Redação por cluster (GMM)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
ggsave('plots/gauss_violin_mt.png', plot = gauss_violin_mt)
ggsave('plots/gauss_violin_ch.png', plot = gauss_violin_ch)
ggsave('plots/gauss_violin_cn.png', plot = gauss_violin_cn)
ggsave('plots/gauss_violin_lc.png', plot = gauss_violin_lc)
ggsave('plots/gauss_violin_redacao.png', plot = gauss_violin_redacao)
ggsave('plots/bar_num_obs_cluster.png', plot = bar_num_obs_cluster)
ggsave('plots/violin_nota.png', plot = violin_nota)
reetiquetar <- function(x) {
if(x == 1) return(6)
if(x == 2) return(3)
if(x == 3) return(4)
if(x == 4) return(7)
if(x == 5) return(2)
if(x == 6) return(5)
if(x == 7) return(1)
}
db_pam %>% mutate(Cluster = reetiquetar(Cluster))
db_pam$Cluster
db_pam$Cluster %>% reetiquetar(x)
db_pam$Cluster %>% reetiquetar(.)
if(x == 5) return(2)
reetiquetar <- function(x) {
print(x)
if(x == 1) return(6)
if(x == 2) return(3)
if(x == 3) return(4)
if(x == 4) return(7)
if(x == 5) return(2)
if(x == 6) return(5)
if(x == 7) return(1)
}
db_pam$Cluster %>% reetiquetar(.)
db_pam$Cluster %>% sapply(., reetiquetar)
View(db_pam)
db_pam$Cluster <- sapply(db_pam$Cluster, reetiquetar)
View(db_pam)
db_pam$Cluster <- as.factor(db_pam$Cluster)
pam_violin_lc <- kmedoids_violin_LC <- ggplot(db_pam %>% select(LC, Cluster), aes(x = Cluster, y = LC, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_mt <- ggplot(db_pam %>% select(MT, Cluster), aes(x = Cluster, y = MT, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Matemática por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_cn <- ggplot(db_pam %>% select(CN, Cluster), aes(x = Cluster, y = CN, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências da Natureza por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_ch <- ggplot(db_pam %>% select(CH, Cluster), aes(x = Cluster, y = CH, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Ciências Humanas por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
pam_violin_redacao <- ggplot(db_pam %>% select(REDAÇÃO, Cluster), aes(x = Cluster, y = REDAÇÃO, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Redação por cluster (k-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
ggsave('plots/pam_violin_mt.png', plot = pam_violin_mt)
ggsave('plots/pam_violin_ch.png', plot = pam_violin_ch)
ggsave('plots/pam_violin_cn.png', plot = pam_violin_cn)
ggsave('plots/pam_violin_lc.png', plot = pam_violin_lc)
ggsave('plots/pam_violin_redacao.png', plot = pam_violin_redacao)
model_pam$medoids
model_pam$medoids %>% str(.)
model_pam$medoids %>% select(col.order)
model_pam$medoids[, c('MT'. 'CN', 'LC', 'CH')]
model_pam$medoids[, c('MT', 'CN', 'LC', 'CH')]
model_pam$medoids[, c('MT', 'CN', 'LC', 'CH', 'Redação')]
model_pam$medoids[, c('MT', 'CN', 'LC', 'CH', 'REDAÇÃO')]
db_mclust %>% group_by(Cluster) %>% summarise_all(n = n())
db_mclust %>% group_by(Cluster) %>% summarise(n = n())
db_mclust %>% group_by(Cluster) %>% summarise(n = n()) %>% mutate(Método = 'GMM')
db_mclust %>% group_by(Cluster) %>% summarise(Quantidade = n()) %>% mutate(Método = 'GMM')
db_pam %>% group_by(Cluster) %>% summarise(n = n()) %>% mutate(Método = 'k-medoids')
summ1 <- db_mclust %>% group_by(Cluster) %>% summarise(n = n()) %>% mutate(Método = 'GMM')
summ2 <- db_pam %>% group_by(Cluster) %>% summarise(n = n()) %>% mutate(Método = 'k-medoids')
union(summ1, summ2)
ggplot(union(summ1, summ2),
aes(x = Cluster, y = n, fill = Método)) +
geom_bar(position="dodge", stat="identity")
ggplot(union(summ1, summ2),
aes(x = Cluster, y = n, fill = Método)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
labs(title = 'Número de observações em cada um dos grupos por método de clusterização',
y = 'Número de observações') +
theme(plot.title = element_text(size=11, face = 'bold'))
num_obs_cluster <- ggplot(union(summ1, summ2),
aes(x = Cluster, y = n, fill = Método)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
labs(title = 'Número de observações em cada um dos grupos por método de clusterização',
y = 'Número de observações') +
theme(plot.title = element_text(size=11, face = 'bold'))
ggsave('plots/num_obs_cluster.png', num_obs_cluster)
summ2 <- db_pam %>% group_by(Cluster) %>% summarise(n = n()) %>% mutate(Método = 'K-medoids')
num_obs_cluster <- ggplot(union(summ1, summ2),
aes(x = Cluster, y = n, fill = Método)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
labs(title = 'Número de observações em cada um dos grupos por método de clusterização',
y = 'Número de observações') +
theme(plot.title = element_text(size=11, face = 'bold'))
ggsave('plots/num_obs_cluster.png', num_obs_cluster)
??kmeans
kmeans(ENEM_2023, 7)
model_kmeans <- kmeans(ENEM_2023, 7)
db_kmeans <- ENEM_2023 %>% mutate(Cluster = as.factor(model_kmeans$cluster))
ggplot(db_kmeans %>% select(LC, Cluster), aes(x = Cluster, y = LC, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (K-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
model_kmeans$centers
sqrt((472.22781 - 558.36802)^2 + (500.73419 - 592.47819)^2 + (499.18023 - 575.59052)^2 + (482.24593 - 649.93528)^2 + (577.0220 - 815.2581)^2)
library(dbscan)
model_optics <- dbscan::optics(ENEM_2023, 150)
model_optics$order
model_optics$xi
model_optics$reachdist
model_optics$coredist
model_optics$order
model_optics$cluster
model_optics$minPts
model_optics$predecessor
model_optics$reachdist
model_optics$coredist
model_optics
model_dbscan <- dbscan(ENEM_2023, eps = 150)
model_dbscan$cluster
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 10)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 400, minPts = 10)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 300, minPts = 10)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 300, minPts = 5)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 250, minPts = 5)
model_dbscan <- dbscan(ENEM_2023, eps = 250, minPts = 5)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 5)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 6)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 7)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 9)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 12)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 12)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 20)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 30)
max(model_dbscan$cluster)
model_dbscan <- dbscan(ENEM_2023, eps = 200, minPts = 50)
max(model_dbscan$cluster)
db_dbscan <- ENEM_2023 %>% mutate(Cluster = as.factor(model_dbscan))
db_dbscan <- ENEM_2023 %>% mutate(Cluster = as.factor(model_dbscan$cluster))
ggplot(db_dbscan %>% select(LC, Cluster), aes(x = Cluster, y = LC, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (K-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
ggplot(db_dbscan %>% select(MT, Cluster), aes(x = Cluster, y = MT, group = Cluster, fill = Cluster)) +
geom_violin(draw_quantiles = 0.5) +
scale_x_discrete(breaks=1:7, drop = FALSE) +
ylim(0, 1000) +
theme_bw() +
labs(title = 'Gráfico de violino das notas na prova de Linguagem e Código por cluster (K-medoids)',
y = 'Nota') +
theme(
legend.position="none",
plot.title = element_text(size=11, face = 'bold')
)
dbscan::kNNdist(ENEM_2023, k = 1)
plot(dbscan::kNNdist(ENEM_2023, k = 1))
plot(dbscan::kNNdist(ENEM_2023, k = 3))
plot(dbscan::kNNdist(ENEM_2023, k = 10))
library(tidyverse)
read_csv(files.choose())
read_csv(file.choose())
read_csv2(file.choose())
db <- read_csv2(file.choose())
View(db)
db <- read_csv2(file.choose())
db <- read_csv2(file.choose(), locale = pt-BR)
db <- read_csv2(file.choose(), locale = 'pt-BR')
db <- read_csv2(file.choose(), locale = )
locale('br')
db <- read_csv2(file.choose(), locale = 'br')
str(locale(''))
db <- read_csv2(file.choose(), locale = locale('br'))
View(db)
db$classificacao_acidente
db <- read_csv2(file.choose(), locale = locale('br', encoding = 'ANSI'))
''
'ãp'
acidentes2023 <- read.csv("C:/Users/enzop/Downloads/acidentes2023/acidentes2023.csv", encoding="ANSI_X3.4-1986", sep=";", comment.char="#")
View(acidentes2023)
acidentes2023$classificacao_acidente
db %>% group_by(tipo_veiculo) %>% summarise(n = n())
db %>% group_by(tipo_veiculo) %>% summarise(n = n()) %>% arrange()
db %>% group_by(tipo_veiculo) %>% summarise(n = n()) %>% arrange(desc())
db %>% group_by(tipo_veiculo) %>% summarise(n = n()) %>% arrange(desc(n))
db %>% group_by(tipo_veiculo) %>% summarise(n = n(), mortos = sum(mortos), ) %>% arrange(desc(n))
32392/1622
1622/32393
db %>% filter(tipo_veiculo == 'Motocicleta') %>% group_by(causa_acidente) %>% summarise(n = n())
db %>% filter(tipo_veiculo == 'Motocicleta') %>% group_by(causa_acidente) %>% summarise(n = n()) %>% arrange(desc())
db %>% filter(tipo_veiculo == 'Motocicleta') %>% group_by(causa_acidente) %>% summarise(n = n()) %>% arrange(desc(n))
?lm
